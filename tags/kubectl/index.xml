<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kubectl on Dev Utkarsh</title><link>https://blog.devutkarsh.com/tags/kubectl/</link><description>Recent content in kubectl on Dev Utkarsh</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 24 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.devutkarsh.com/tags/kubectl/index.xml" rel="self" type="application/rss+xml"/><item><title>Uses of istio service mesh</title><link>https://blog.devutkarsh.com/uses-of-istio-service-mesh/</link><pubDate>Sun, 24 Jul 2022 00:00:00 +0000</pubDate><guid>https://blog.devutkarsh.com/uses-of-istio-service-mesh/</guid><description> Getting started with Istio Service Mesh Use cases</description></item><item><title>Istio service mesh in kubernetes</title><link>https://blog.devutkarsh.com/istio-service-mesh-in-kubernetes/</link><pubDate>Fri, 24 Jun 2022 00:00:00 +0000</pubDate><guid>https://blog.devutkarsh.com/istio-service-mesh-in-kubernetes/</guid><description>Setting up Istio Service Mesh on Kubernetes Getting a kubernetes cluster up and running is fairly easy now. But I&amp;rsquo;ve seen challenges like -
How to moinitor the network flow &amp;amp; health? How to ingress traffic is microservices ? How to do canary deployments &amp;amp; prevent downtimes? How to perform Auth on incoming requests? Then I came across this amazing service-mesh bundle for my infrastucture layer specially made for distributed systems running on Kubernetes.</description></item><item><title>Configuring Kubernetes for Multiple Environments with Kustomize</title><link>https://blog.devutkarsh.com/configuring-kubernetes-for-multiple-environments-with-kustomize/</link><pubDate>Sun, 26 Sep 2021 00:00:00 +0000</pubDate><guid>https://blog.devutkarsh.com/configuring-kubernetes-for-multiple-environments-with-kustomize/</guid><description>Kubernetes Configuration Management for DEV, Staging, QA, Production, etc - So you may have learned so far how to set up a kuberentes cluster and how to write a manifest and then deploy a pod out of it. If not please refer to my post on getting started with kuberenetes manifests. But you may still be puzzled about how to configure it for multiple environments. Yes, it is possible to use a single deployment and service template to be used for multiple environments.</description></item><item><title>Getting started with Kubernetes Manifests</title><link>https://blog.devutkarsh.com/getting-started-with-kubernetes-manifests/</link><pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate><guid>https://blog.devutkarsh.com/getting-started-with-kubernetes-manifests/</guid><description>Deploy your first container on Kuberentes cluster Well if you have followed us on the previous blog post on how to create a kubernetes cluster on AWS EKS or have gone with local kubernetes clusters like minikube etc. Then you must be aware that to manage all the resources &amp;amp; objects on your cluster you will need a command-line tool kubectl which interacts on your behalf with the kube-api-server to perform almost all operations on your cluster.</description></item></channel></rss>