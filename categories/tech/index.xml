<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tech on Dev Utkarsh</title><link>https://blog.devutkarsh.com/categories/tech/</link><description>Recent content in tech on Dev Utkarsh</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 26 Sep 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.devutkarsh.com/categories/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>Configuring Kubernetes for Multiple Environments with Kustomize</title><link>https://blog.devutkarsh.com/configuring-kubernetes-for-multiple-environments-with-kustomize/</link><pubDate>Sun, 26 Sep 2021 00:00:00 +0000</pubDate><guid>https://blog.devutkarsh.com/configuring-kubernetes-for-multiple-environments-with-kustomize/</guid><description>Kubernetes Configuration Management for DEV, Staging, QA, Production, etc - So you may have learned so far how to set up a kuberentes cluster and how to write a manifest and then deploy a pod out of it. If not please refer to my post on getting started with kuberenetes manifests. But you may still be puzzled about how to configure it for multiple environments. Yes, it is possible to use a single deployment and service template to be used for multiple environments.</description></item><item><title>Getting started with Kubernetes Manifests</title><link>https://blog.devutkarsh.com/getting-started-with-kubernetes-manifests/</link><pubDate>Thu, 23 Sep 2021 00:00:00 +0000</pubDate><guid>https://blog.devutkarsh.com/getting-started-with-kubernetes-manifests/</guid><description>Deploy your first container on Kuberentes cluster Well if you have followed us on the previous blog post on how to create a kubernetes cluster on AWS EKS or have gone with local kubernetes clusters like minikube etc. Then you must be aware that to manage all the resources &amp;amp; objects on your cluster you will need a command-line tool kubectl which interacts on your behalf with the kube-api-server to perform almost all operations on your cluster.</description></item><item><title>Streaming AWS S3 objects in AWS EKS cluster</title><link>https://blog.devutkarsh.com/streaming-aws-s3-objects-in-aws-eks-cluster/</link><pubDate>Mon, 12 Jul 2021 00:00:00 +0000</pubDate><guid>https://blog.devutkarsh.com/streaming-aws-s3-objects-in-aws-eks-cluster/</guid><description>Java spring-boot microservice to read objects from AWS S3 bucket that can be accessed by other microservices over HTTP I recently came across a requirement to host static content for my microservices running on the AWS EKS cluster.
Since there were multiple services that will be accessing different objects so I thought to create a common S3 bucket for hosting and gave S3ReadAccess to my cluster.</description></item><item><title>How to create a Kubernetes cluster on AWS EKS</title><link>https://blog.devutkarsh.com/how-to-create-a-kubernetes-cluster-on-aws-eks/</link><pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate><guid>https://blog.devutkarsh.com/how-to-create-a-kubernetes-cluster-on-aws-eks/</guid><description>Using self-managed Amazon EC2 nodes (No Fargate) To create a kubernetes cluster on aws eks, we would be using the aws cli and eksctl that needs to be installed on your local command line as a pre-requisite.
Your aws cli should be configured with the access token and secret of your aws console and your user should have right aws IAM access role.
Now as you have this ready, we will be creating a config file named as cluster.</description></item><item><title>Using AWS S3 and Lambda to process file chunks</title><link>https://blog.devutkarsh.com/using-aws-s3-and-lambda-to-process-file-chunks/</link><pubDate>Sun, 20 Jun 2021 00:00:00 +0000</pubDate><guid>https://blog.devutkarsh.com/using-aws-s3-and-lambda-to-process-file-chunks/</guid><description>Merge file parts/chunks in S3 on receive - PUT object by invoking lambda Sending files in chunks over the network is most common because it&amp;rsquo;s easy to apply a retry mechanism over failed parts. On receiving all the parts then the parts or chunks are merged together to create one single file. We all know how frustrating is to see download failing at 99%.
Data chunking is the most common technique used by your wifi to send you data packets.</description></item><item><title>How high is technology in 2021?</title><link>https://blog.devutkarsh.com/how-high-is-technology-in-2021/</link><pubDate>Sun, 28 Feb 2021 00:00:00 +0000</pubDate><guid>https://blog.devutkarsh.com/how-high-is-technology-in-2021/</guid><description>Understanding the world of cloud computing and high-speed internet. Technology has moved to the cloud, it was just 11 years ago when I was puzzled by the word cloud computing. Luckily back then I had access to free internet and Google search engine to kill my curiosity.
It was when I was sitting copying all the pictures from the college fest to a pen drive so that we can share them with everyone else.</description></item><item><title>API-microgateway service using Netflix Zuul on Java</title><link>https://blog.devutkarsh.com/api-microgateway-service-using-netflix-zuul-on-java/</link><pubDate>Thu, 11 Jun 2020 00:00:00 +0000</pubDate><guid>https://blog.devutkarsh.com/api-microgateway-service-using-netflix-zuul-on-java/</guid><description>How to write an api-service or edge-service or api-gateway? So we are here today to write a gateway microservice using Springboot framework, Netflix&amp;rsquo;s Zuul library, and our never-getting-old programming language Java. As a part of this development, we will be using Gradle to build this together and prepare the Docker image out of it.
If you are not sure yet, what this api-service is going to help you with, I recommend reading out What is api-microgateway?</description></item><item><title>API Gateway vs Edge Proxy service vs API Microgateway</title><link>https://blog.devutkarsh.com/api-gateway-vs-edge-proxy-service-vs-api-microgateway/</link><pubDate>Mon, 01 Jun 2020 00:00:00 +0000</pubDate><guid>https://blog.devutkarsh.com/api-gateway-vs-edge-proxy-service-vs-api-microgateway/</guid><description>Routing request to different microservices from a single REST endpoint Having a single entry point for your all backend microservices in your application comes in handy for the frontend applications. The front end just needs to know one domain to reach for anything. Since in distributed architecture, we have multiple services running, it becomes easier for the frontend client to communicate only with one gateway only without knowing what happens in the background.</description></item><item><title>Hello World!</title><link>https://blog.devutkarsh.com/hello-world/</link><pubDate>Tue, 15 Nov 2016 00:00:00 +0000</pubDate><guid>https://blog.devutkarsh.com/hello-world/</guid><description>Where is this blog coming from? The biggest driving force will always be curiosity, and if you have it, your focus will lead you where you want to be!
I have always been curios to explore, the wild in nature, the depth in music and everything else. Always trying to learn more and grasp knowledge while grow spritually. But that becomes problematic if you try to hop on multiple boats because time is quantifiable.</description></item></channel></rss>